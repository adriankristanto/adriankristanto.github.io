{"version":3,"sources":["components/Clock.js","components/MenuBar.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","Date","currentDateTime","setCurrentDateTime","useEffect","timer","setInterval","clearInterval","day","getDay","date","getDate","month","getMonth","hour","getHours","toString","substr","minute","getMinutes","meridiem","MenuBar","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAiCeA,MA/Bf,WAAkB,IAAD,EACiCC,mBAAS,IAAIC,MAD9C,mBACNC,EADM,KACWC,EADX,KAKbC,qBAAU,WAEN,IAAIC,EAAQC,aAAY,WACpBH,EAAmB,IAAIF,QACxB,KAEH,OAAO,WACHM,cAAcF,OAItB,IAAIG,EAdS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAczCN,EAAgBO,UAC3BC,EAAOR,EAAgBS,UACvBC,EAfW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAe1EV,EAAgBW,YAG/BC,EAAOZ,EAAgBa,WAAa,GAGxCD,GAAQ,MAAiB,IAATA,EAAa,GAAKA,GAAME,YAAYC,QAAQ,GAC5D,IAAIC,GAAU,KAAOhB,EAAgBiB,aAAaH,YAAYC,QAAQ,GAClEG,EAAWlB,EAAgBa,WAAa,GAAK,KAAO,KAExD,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,EAAlC,YAA0CI,EAA1C,YAAoDE,I,OCjBzCC,MAVf,WACI,OACI,sBAAKC,UAAU,wHAAf,UACI,oCACA,8BAAK,cAAC,EAAD,MACL,wCCGGC,MARf,WACE,OACE,qBAAKD,UAAU,oBAAf,SACE,cAAC,EAAD,OCMSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bf574f38.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\";\n\nfunction Clock() {\n    const [currentDateTime, setCurrentDateTime] = useState(new Date());\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n    useEffect(() => {\n        // update the time every 1000 milliseconds\n        let timer = setInterval(() => {\n            setCurrentDateTime(new Date())\n        }, 1000);\n\n        return function cleanup(){\n            clearInterval(timer)\n        };\n    })\n\n    let day = days[currentDateTime.getDay()]\n    let date = currentDateTime.getDate()\n    let month = months[currentDateTime.getMonth()]\n    // change hour from 0-23 to 0-11\n    // when hour === 0, change it to 12\n    let hour = currentDateTime.getHours() % 12\n    // .substr(-2) only take the last 2 characters from the string\n    // so, when 001 -> 01 and 0012 -> 12\n    hour = (\"00\" + (hour === 0 ? 12 : hour).toString()).substr(-2)\n    let minute = (\"00\" + currentDateTime.getMinutes().toString()).substr(-2)\n    let meridiem = currentDateTime.getHours() < 12 ? 'am' : 'pm'\n\n    return `${day} ${date} ${month} ${hour}:${minute} ${meridiem}`;\n}\n\nexport default Clock;","import React from \"react\";\nimport Clock from \"./Clock\";\n\nfunction MenuBar() {\n    return (\n        <div className=\"w-screen px-5 flex flex-row flex-nowrap justify-between items-center bg-black text-gray-50 cursor-default select-none\">\n            <div>1</div>\n            <div><Clock /></div>\n            <div>3</div>\n        </div>\n    );\n}\n\nexport default MenuBar;","import React from \"react\";\nimport MenuBar from \"./components/MenuBar\"\n\nfunction App() {\n  return (\n    <div className=\"h-screen w-screen\">\n      <MenuBar />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}