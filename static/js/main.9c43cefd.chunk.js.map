{"version":3,"sources":["components/Clock.js","components/ControlCentre.js","components/MenuBar.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","Date","currentDateTime","setCurrentDateTime","useEffect","timer","setInterval","clearInterval","day","getDay","date","getDate","month","getMonth","hour","getHours","toString","substr","minute","getMinutes","meridiem","ControlCentre","props","className","visible","xmlns","height","viewBox","width","fill","d","MenuBar","controlCentre","setControlCentre","menuBarItemClassName","tabIndex","enableBackground","onFocus","onBlur","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c43cefd.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\";\n\nfunction Clock() {\n    const [currentDateTime, setCurrentDateTime] = useState(new Date());\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n    useEffect(() => {\n        // update the time every 1000 milliseconds\n        let timer = setInterval(() => {\n            setCurrentDateTime(new Date())\n        }, 1000);\n\n        return function cleanup(){\n            clearInterval(timer)\n        };\n    })\n\n    let day = days[currentDateTime.getDay()]\n    let date = currentDateTime.getDate()\n    let month = months[currentDateTime.getMonth()]\n    // change hour from 0-23 to 0-11\n    // when hour === 0, change it to 12\n    let hour = currentDateTime.getHours() % 12\n    // .substr(-2) only take the last 2 characters from the string\n    // so, when 001 -> 01 and 0012 -> 12\n    hour = (\"00\" + (hour === 0 ? 12 : hour).toString()).substr(-2)\n    let minute = (\"00\" + currentDateTime.getMinutes().toString()).substr(-2)\n    let meridiem = currentDateTime.getHours() < 12 ? 'am' : 'pm'\n\n    return `${day} ${date} ${month} ${hour}:${minute} ${meridiem}`;\n}\n\nexport default Clock;","import React from \"react\";\n\nfunction ControlCentre(props) {\n    return (\n        <div className={`absolute my-0.5 px-1 top-8 right-44 ${!props.visible && 'hidden'} rounded bg-black`}>\n            <svg className=\"fill-current\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4zM11 20v-5.5H9L13 7v5.5h2L11 20z\"/></svg>\n            <svg className=\"fill-current\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0zm0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3c-1.65-1.66-4.34-1.66-6 0zm-4-4l2 2c2.76-2.76 7.24-2.76 10 0l2-2C15.14 9.14 8.87 9.14 5 13z\"/></svg>\n            <svg className=\"fill-current\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M3 9v6h4l5 5V4L7 9H3zm7-.17v6.34L7.83 13H5v-2h2.83L10 8.83zM16.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77 0-4.28-2.99-7.86-7-8.77z\"/></svg>\n        </div>\n    )\n}\n\nexport default ControlCentre;","import React, {useState} from \"react\";\nimport Clock from \"./Clock\";\nimport ControlCentre from \"./ControlCentre\";\n\nfunction MenuBar() {\n    const [controlCentre, setControlCentre] = useState(false);\n\n    const menuBarItemClassName = \"px-3 py-1 rounded focus:outline-none focus:bg-gray-500\";\n\n    return (\n        <div className=\"w-screen flex flex-row flex-nowrap justify-between items-center bg-black text-gray-50 cursor-default select-none\">\n            <div className={menuBarItemClassName}>\n                AK\n            </div>\n\n            <div className=\"flex\">\n                {/* Dark mode */}\n                <div tabIndex=\"0\" className={menuBarItemClassName}>\n                    <svg className=\"fill-current\" xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z\"/></svg>\n                </div>\n\n                {/* Control Centre */}\n                <div tabIndex=\"0\" className={menuBarItemClassName} onFocus={() => setControlCentre(true)} onBlur={() => setControlCentre(false)}>\n                    <svg className=\"fill-current\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 6H7c-3.31 0-6 2.69-6 6s2.69 6 6 6h10c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 10H7c-2.21 0-4-1.79-4-4s1.79-4 4-4h10c2.21 0 4 1.79 4 4s-1.79 4-4 4zm0-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/></svg>\n                    <ControlCentre visible={controlCentre}/>\n                </div>\n\n                <div className={menuBarItemClassName}>\n                    <Clock />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MenuBar;","import React from \"react\";\nimport MenuBar from \"./components/MenuBar\"\n\nfunction App() {\n  return (\n    <div className=\"h-screen w-screen\">\n      <MenuBar />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}